import { Individual } from './individual';
import { LegalEntityAssociation } from './legalEntityAssociation';
import { Organization } from './organization';
import { SoleProprietorship } from './soleProprietorship';
export declare class LegalEntityInfo {
    /**
    * List of legal entities associated with the current legal entity. For example, ultimate beneficial owners associated with an organization through ownership or control, or as signatories.
    */
    'entityAssociations'?: Array<LegalEntityAssociation>;
    'individual'?: Individual;
    'organization'?: Organization;
    /**
    * Your reference for the legal entity, maximum 150 characters.
    */
    'reference'?: string;
    'soleProprietorship'?: SoleProprietorship;
    /**
    * The type of legal entity.   Possible values: **individual**, **organization**, or **soleProprietorship**.
    */
    'type': LegalEntityInfo.TypeEnum;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace LegalEntityInfo {
    enum TypeEnum {
        Individual,
        Organization,
        SoleProprietorship,
        Trust,
        UnincorporatedPartnership
    }
}
