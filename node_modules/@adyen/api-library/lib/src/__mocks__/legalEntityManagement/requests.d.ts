export declare const businessLineInfo: {
    capability: string;
    industryCode: string;
    webData: {
        webAddress: string;
    }[];
    legalEntityId: string;
    sourceOfFunds: {
        type: string;
        adyenProcessedFunds: string;
        description: string;
    };
};
export declare const businessLineInfoUpdate: {
    capability: string;
    industryCode: string;
    legalEntityId: string;
    salesChannels: string[];
    sourceOfFunds: {
        acquiringBusinessLineId: string;
        adyenProcessedFunds: boolean;
        description: string;
        type: string;
    };
    webData: {
        webAddress: string;
    }[];
    webDataExemption: {
        reason: string;
    };
};
export declare const document: {
    attachment: {
        content: string;
        contentType: string;
        filename: string;
        pageName: string;
        pageType: string;
    };
    attachments: {
        content: string;
        contentType: string;
        filename: string;
        pageName: string;
        pageType: string;
    }[];
    description: string;
    expiryDate: string;
    fileName: string;
    id: string;
    issuerCountry: string;
    issuerState: string;
    number: string;
    owner: {
        id: string;
        type: string;
    };
    type: string;
};
export declare const onboardingLinkInfo: {
    locale: string;
    redirectUrl: string;
    themeId: string;
};
export declare const legalEntityInfo: {
    type: string;
    individual: {
        residentialAddress: {
            city: string;
            country: string;
            postalCode: string;
            street: string;
            stateOrProvince: string;
        };
        phone: {
            countryCode: string;
            number: string;
            type: string;
        };
        name: {
            firstName: string;
            lastName: string;
        };
        birthData: {
            dateOfBirth: string;
        };
        email: string;
    };
};
export declare const genericEntityInfo: {
    entityAssociations: {
        associatorId: string;
        entityType: string;
        jobTitle: string;
        legalEntityId: string;
        name: string;
        type: string;
    }[];
    individual: {
        birthData: {
            dateOfBirth: string;
        };
        email: string;
        identificationData: {
            expiryDate: string;
            issuerCountry: string;
            issuerState: string;
            nationalIdExempt: boolean;
            number: string;
            type: string;
        };
        name: {
            firstName: string;
            infix: string;
            lastName: string;
        };
        nationality: string;
        phone: {
            number: string;
            type: string;
        };
        residentialAddress: {
            city: string;
            country: string;
            postalCode: string;
            stateOrProvince: string;
            street: string;
            street2: string;
        };
        taxInformation: {
            country: string;
            number: string;
            type: string;
        }[];
        webData: {
            webAddress: string;
        };
    };
    organization: {
        description: string;
        doingBusinessAs: string;
        email: string;
        legalName: string;
        phone: {
            number: string;
            type: string;
        };
        principalPlaceOfBusiness: {
            city: string;
            country: string;
            postalCode: string;
            stateOrProvince: string;
            street: string;
            street2: string;
        };
        registeredAddress: {
            city: string;
            country: string;
            postalCode: string;
            stateOrProvince: string;
            street: string;
            street2: string;
        };
        registrationNumber: string;
        stockData: {
            marketIdentifier: string;
            stockNumber: string;
            tickerSymbol: string;
        };
        taxInformation: {
            country: string;
            number: string;
            type: string;
        }[];
        taxReportingClassification: {
            businessType: string;
            financialInstitutionNumber: string;
            mainSourceOfIncome: string;
            type: string;
        };
        type: string;
        vatAbsenceReason: string;
        vatNumber: string;
        webData: {
            webAddress: string;
        };
    };
    soleProprietorship: {
        countryOfGoverningLaw: string;
        doingBusinessAs: string;
        name: string;
        principalPlaceOfBusiness: {
            city: string;
            country: string;
            postalCode: string;
            stateOrProvince: string;
            street: string;
            street2: string;
        };
        registeredAddress: {
            city: string;
            country: string;
            postalCode: string;
            stateOrProvince: string;
            street: string;
            street2: string;
        };
        registrationNumber: string;
        vatAbsenceReason: string;
        vatNumber: string;
    };
};
export declare const transferInstrumentInfo: {
    bankAccount: {
        accountNumber: string;
        accountType: string;
        bankBicSwift: string;
        bankCity: string;
        bankCode: string;
        bankName: string;
        branchCode: string;
        checkCode: string;
        countryCode: string;
        currencyCode: string;
        iban: string;
    };
    legalEntityId: string;
    recurringDetail: {
        merchantAccount: string;
        reference: string;
        shopperReference: string;
    };
    type: string;
};
